{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pataei\\\\Desktop\\\\Twitch-Clone\\\\Client\\\\src\\\\Component\\\\GoogleAuth.js\";\nimport React from 'react';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null // loading Google API on load\n\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\n    this.onAuthChange = () => {\n      // updating state based on isSignedin\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n  }\n\n  componentDidMount() {\n    // load the API call\n    window.gapi.load('client:auth2', () => {\n      // initializing the client\n      window.gapi.client.init({\n        // setting our google ID\n        clientId: '373814302015-im2k9grglutk1rlh743q5ria6pikoa5s.apps.googleusercontent.com',\n        // choose what scope we need - in this case we just need the email\n        scope: 'email'\n      }).then(() => {\n        // once we got the promis and everything is loaded, we load them to internal variables\n        this.auth = window.gapi.auth2.getAuthInstance(); // checking out if the user has signed in or not\n\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        }); // adding an event listener on isSigend in method\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return React.createElement(\"button\", {\n        onClick: this.onSignOut,\n        className: \"ui red google button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Sign out\"));\n    } else {\n      return React.createElement(\"button\", {\n        onClick: this.onSignIn,\n        className: \"ui red google button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Sign in with google\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["C:\\Users\\pataei\\Desktop\\Twitch-Clone\\Client\\src\\Component\\GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","onSignInClick","auth","signIn","onSignOutClick","signOut","onAuthChange","setState","get","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","onSignOut","onSignIn","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAACC,MAAAA,UAAU,EAAC,IAAZ,CAER;;AAFQ,KAF6B;;AAAA,SAyBrCC,aAzBqC,GAyBrB,MAAM;AAClB,WAAKC,IAAL,CAAUC,MAAV;AACH,KA3BoC;;AAAA,SA6BrCC,cA7BqC,GA6BpB,MAAM;AACnB,WAAKF,IAAL,CAAUG,OAAV;AACH,KA/BoC;;AAAA,SAiCrCC,YAjCqC,GAiCtB,MAAM;AACjB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,UAAU,EAAE,KAAKE,IAAL,CAAUF,UAAV,CAAqBQ,GAArB;AAAd,OAAd;AACH,KApCoC;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAI;AACjC;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpB;AACAC,QAAAA,QAAQ,EAAE,0EAFU;AAGpB;AACAC,QAAAA,KAAK,EAAE;AAJa,OAAxB,EAKGC,IALH,CAKQ,MAAM;AACV;AACA,aAAKf,IAAL,GAAYQ,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CAFU,CAGV;;AACA,aAAKZ,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAG,KAAKE,IAAL,CAAUF,UAAV,CAAqBQ,GAArB;AAAf,SAAd,EAJU,CAKV;;AACA,aAAKN,IAAL,CAAUF,UAAV,CAAqBoB,MAArB,CAA4B,KAAKd,YAAjC;AACH,OAZD;AAaH,KAfD;AAgBH;;AAeDe,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKtB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC9B,aACI;AAAQ,QAAA,OAAO,EAAE,KAAKsB,SAAtB;AAAiC,QAAA,SAAS,EAAC,sBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAOH,KARM,MAQA;AACH,aACI;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAA+B,QAAA,SAAS,EAAC,sBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ;AAOH;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKH,gBAAL,EAAN,CAAP;AACH;;AA9DoC;;AAiEzC,eAAexB,UAAf","sourcesContent":["import React from 'react'\r\n\r\nclass GoogleAuth extends React.Component {\r\n    // initalizing the State\r\n    state = {isSignedIn:null}\r\n\r\n    // loading Google API on load\r\n    componentDidMount() {\r\n        // load the API call\r\n        window.gapi.load('client:auth2', ()=>{\r\n            // initializing the client\r\n            window.gapi.client.init({\r\n                // setting our google ID\r\n                clientId: '373814302015-im2k9grglutk1rlh743q5ria6pikoa5s.apps.googleusercontent.com',\r\n                // choose what scope we need - in this case we just need the email\r\n                scope: 'email'\r\n            }).then(() => {\r\n                // once we got the promis and everything is loaded, we load them to internal variables\r\n                this.auth = window.gapi.auth2.getAuthInstance()\r\n                // checking out if the user has signed in or not\r\n                this.setState({ isSignedIn : this.auth.isSignedIn.get() })\r\n                // adding an event listener on isSigend in method\r\n                this.auth.isSignedIn.listen(this.onAuthChange)\r\n            })\r\n        })\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn()\r\n    }\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut()\r\n    }\r\n    \r\n    onAuthChange = () => {\r\n        // updating state based on isSignedin\r\n        this.setState({ isSignedIn: this.auth.isSignedIn.get() })\r\n    }\r\n\r\n    renderAuthButton() {\r\n        if (this.state.isSignedIn === null) {\r\n            return null\r\n        } else if (this.state.isSignedIn) {\r\n            return (\r\n                <button onClick={this.onSignOut} className=\"ui red google button\">\r\n                    <i className=\"google icon\">\r\n                        Sign out\r\n                    </i>\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button onClick={this.onSignIn}className=\"ui red google button\">\r\n                    <i className=\"google icon\">\r\n                        Sign in with google\r\n                    </i>\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <div>{this.renderAuthButton()}</div>\r\n    }\r\n}\r\n\r\nexport default GoogleAuth"]},"metadata":{},"sourceType":"module"}