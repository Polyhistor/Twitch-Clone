{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pataei\\\\Desktop\\\\Twitch-Clone\\\\Client\\\\src\\\\Component\\\\Streams\\\\StreamCreate.js\";\nimport React from 'react'; // let's get a component and a function from the redux-form library\n// bear in mind that Field is a component and that's why it starts with capital\n// whereas reduxForm is just a function, we will use.\n\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput(formProps) {\n    console.log(formProps);\n    return React.createElement(\"input\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n} //instead of connect, we use reduxForm, this will add all the form functions into our props\n\n\nexport default reduxForm({\n  // you're gonna name your form here\n  form: 'streamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["C:\\Users\\pataei\\Desktop\\Twitch-Clone\\Client\\src\\Component\\Streams\\StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","formProps","console","log","render","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAgC,YAAhC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKJ,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAdsC,C,CAiB3C;;;AACA,eAAeH,SAAS,CAAC;AACrB;AACAQ,EAAAA,IAAI,EAAE;AAFe,CAAD,CAAT,CAGZP,YAHY,CAAf","sourcesContent":["import React from 'react'\r\n// let's get a component and a function from the redux-form library\r\n// bear in mind that Field is a component and that's why it starts with capital\r\n// whereas reduxForm is just a function, we will use.\r\nimport { Field, reduxForm} from 'redux-form'\r\n\r\nclass StreamCreate extends React.Component {\r\n    renderInput(formProps) {\r\n        console.log(formProps)\r\n        return <input></input>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                {/* The field component does not know anything to render, you need to help it using 'component' property */}\r\n                <Field name=\"title\" component={this.renderInput}></Field>\r\n                <Field name=\"description\" component={this.renderInput}></Field>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n//instead of connect, we use reduxForm, this will add all the form functions into our props\r\nexport default reduxForm({\r\n    // you're gonna name your form here\r\n    form: 'streamCreate'\r\n})(StreamCreate)"]},"metadata":{},"sourceType":"module"}