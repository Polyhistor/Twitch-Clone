{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pataei\\\\Desktop\\\\Twitch-Clone\\\\Client\\\\src\\\\Component\\\\Streams\\\\StreamCreate.js\";\nimport React from \"react\"; // let's get a component and a function from the redux-form library\n// bear in mind that Field is a component and that's why it starts with capital\n// whereas reduxForm is just a function, we will use.\n\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  // Field component captures and returns component\n  renderInput({\n    input,\n    label\n  }) {\n    // we take out all the input properties here\n    return React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" \", label, \" \"), React.createElement(\"input\", Object.assign({}, input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })));\n  } // we don't call events here! in redux Form, we just pass in form Values\n\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      // handleSubmit is an internal function of redux form that automaticall calls preventDefault and helps with form submitting\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n} //instead of connect, we use reduxForm, this will add all the form functions into our props\n\n\nexport default reduxForm({\n  // you're gonna name your form here\n  form: \"streamCreate\"\n})(StreamCreate);","map":{"version":3,"sources":["C:\\Users\\pataei\\Desktop\\Twitch-Clone\\Client\\src\\Component\\Streams\\StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","onSubmit","formValues","console","log","render","props","handleSubmit","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzC;AACAC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAmB;AAC5B;AACA,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASA,KAAT,MADF,EAEE,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AAMD,GAVwC,CAYzC;;;AACAE,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AACE;AACA,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAFZ;AAGE,MAAA,SAAS,EAAC,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKH,WAApC;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAE,KAAKA,WAFlB;AAGE,MAAA,KAAK,EAAC,mBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAYE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADF;AAgBD;;AAlCwC,C,CAqC3C;;;AACA,eAAeH,SAAS,CAAC;AACvB;AACAa,EAAAA,IAAI,EAAE;AAFiB,CAAD,CAAT,CAGZZ,YAHY,CAAf","sourcesContent":["import React from \"react\";\r\n// let's get a component and a function from the redux-form library\r\n// bear in mind that Field is a component and that's why it starts with capital\r\n// whereas reduxForm is just a function, we will use.\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass StreamCreate extends React.Component {\r\n  // Field component captures and returns component\r\n  renderInput({ input, label }) {\r\n    // we take out all the input properties here\r\n    return (\r\n      <div className=\"field\">\r\n        <label> {label} </label>\r\n        <input {...input} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // we don't call events here! in redux Form, we just pass in form Values\r\n  onSubmit(formValues) {\r\n    console.log(formValues);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        // handleSubmit is an internal function of redux form that automaticall calls preventDefault and helps with form submitting\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        className=\"ui form\"\r\n      >\r\n        {/* The field component does not know anything to render, you need to help it using 'component' property */}\r\n        <Field name=\"title\" component={this.renderInput} label=\"Enter title\" />\r\n        <Field\r\n          name=\"description\"\r\n          component={this.renderInput}\r\n          label=\"Enter description\"\r\n        />\r\n        <button className=\"ui button primary\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n//instead of connect, we use reduxForm, this will add all the form functions into our props\r\nexport default reduxForm({\r\n  // you're gonna name your form here\r\n  form: \"streamCreate\"\r\n})(StreamCreate);\r\n"]},"metadata":{},"sourceType":"module"}